-------------------
程式目的
-------------------
‧給定 Tree 的 PreOrder 與 InOrder 表示法，推論出該 Tree 的 PostOrder 表示法。

-------------------
程式需求
-------------------
‧程式必需命名為 Tree.exe。
‧程式必需是自己寫的。
‧程式必需以 C 語言完成，並能以 VC6.0 以上或 gcc 編譯成功。
‧程式必需加入適當的註解，並維持良好的寫碼風格。
‧程式執行後必需讀入輸入檔，由輸入檔中的 PreOrder 與 InOrder 資訊，推論出 PostOrder，
  並將結果寫至輸出檔。請見下方「輸入檔格式」與「輸出檔格式」。
‧執行程式時不需由 command line 給任何參數。
‧程式在完成輸出檔後，應立即結束，請勿使用 system("pause") 之類的東西讓畫面暫停。
‧不需要做任何容錯處理，例如可以假設輸入檔格式完全正確，可以假設檔案讀寫不會發生例外狀況。
‧程式至少要能通過助教提供的 Test Case，請見下方「驗證與測試」。

-------------------
輸入檔格式
-------------------
‧輸入檔檔名為 Input.txt。
‧輸入檔與 Tree.exe 在同一目錄下。
‧輸入檔內容恰有 3 列 (整個輸入檔中除了 \r\n 外，不會有任何空白字元或 \t 字元)：
  (1) 第 0 列恰包含一個整數，代表 Tree 的 Node 個數，此數值必大於 0，小於等於 50。
      整數之後緊跟著 \r\n 作為換行。
  (2) 第 1 列代表 Tree 的 PreOrder 表示法，包含一串字元，每個字元代表一個 Node，
      字元只會由【大寫 A-Z、小寫 a-z、數字 0-9】所組成，不會有重覆的字元，字元個數
      會恰等於第 0 列的整數值。最後一個字元之後緊跟著 \r\n 作為換行。
  (3) 第 2 列代表 Tree 的 InOrder 表示法，包含一串字元，每個字元代表一個 Node，
      字元只會由第 1 列中出現的字元所組成，且每個字元恰出現一次。最後一個字元之後不
      會有任何其他字元，亦即檔案結束。
‧由輸入檔中的資訊必能建出一棵唯一的 Tree。
‧輸入檔範例如下：
9
ABCDEFGHI
BCAEDGHFI

-------------------
輸出檔格式
-------------------
‧輸出檔檔名必需為 Output.txt。
‧輸出檔必需與 Tree.exe 在同一目錄下。
‧假設 Tree 有 n 個 Node，則輸出檔的第 0 個字元到第 n-1 個字元必需正好代表該 Tree 的
  PostOrder 表示法，每個字元代表一個 Node，這些字元必需與輸入檔中的字元一致，英文字
  母的大小寫有別。第 n 個以後 (包含第 n 個) 的字元視為無意義，將不會影響評分，但建議
  不要多輸出額外的字元。
‧輸出檔範例如下：
CBEHGIFDA

-------------------
驗證與測試
-------------------
‧為了讓你方便驗證自己寫的程式有無錯誤，助教提供一個快速驗證程式 Tester.exe，請將
  Tester.exe 與你的 Tree.exe 放在同一個目錄下 (目錄下只要有這兩個檔即可)，然後雙擊兩下
  Tester.exe 執行，Tester.exe 會使用四個預先訂好的 Test Case 來驗證你程式的正確性，並
  將結果回報給你。
‧Tester.exe 只能在 Windows 作業系統上執行。
‧來 Demo 前請務必先使用 Tester.exe 驗證你的程式，並確定你看到四個「成功!!」字串。
‧你必需自己使用多一點的 Test Case 來驗證你程式的正確性，Demo 時助教會用其他的 
  Test Case 來測試你的程式，但所有的 Test Case 都會符合此份文件中所描述的規範。

-------------------
繳交期限與方式
-------------------
‧10/29(二) 9:10-12:00 a.m.期間完成現場 Demo，簽名，並於當天晚上 23:59 前上傳iLearn2.0，才算完成。

-------------------
評分標準
-------------------
‧評分項目包含以下項目：程式正確性、註解、寫碼風格、助教發問
